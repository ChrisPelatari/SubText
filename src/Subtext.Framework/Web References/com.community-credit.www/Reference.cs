//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1378.
// 
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using Subtext.Framework.Properties;

#pragma warning disable 1591

namespace Subtext.Framework.com.community_credit.www
{
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name = "AffiliateServicesSoap", Namespace = "http://www.community-credit.com/")]
    public partial class AffiliateServices : SoapHttpClientProtocol
    {
        private SendOrPostCallback AddCommunityCreditOperationCompleted;
        private SendOrPostCallback AddNewsgroupCreditOperationCompleted;
        private SendOrPostCallback AddNewsgroupItemOperationCompleted;

        private SendOrPostCallback AutoSubmitBlogOperationCompleted;
        private SendOrPostCallback GenerateFutureCreditOperationCompleted;

        private SendOrPostCallback GetDemographicsOperationCompleted;
        private SendOrPostCallback GetEarnersByDateRangeAndEmailOperationCompleted;

        private SendOrPostCallback GetTopEarnersByDateRangeOperationCompleted;
        private SendOrPostCallback GetTopEarnersOperationCompleted;

        private SendOrPostCallback PointCategoriesAllOperationCompleted;

        private SendOrPostCallback SendConfirmationEmailOperationCompleted;

        private SendOrPostCallback SendWelcomeEmailOperationCompleted;
        private SendOrPostCallback SpreadTheWordOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public AffiliateServices()
        {
            Url = Settings.Default.Subtext_Framework_com_community_credit_www_AffiliateServices;
            if((IsLocalFileSystemWebService(Url) == true))
            {
                UseDefaultCredentials = true;
                useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get { return base.Url; }
            set
            {
                if((((IsLocalFileSystemWebService(base.Url) == true)
                     && (useDefaultCredentialsSetExplicitly == false))
                    && (IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get { return base.UseDefaultCredentials; }
            set
            {
                base.UseDefaultCredentials = value;
                useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event AddNewsgroupItemCompletedEventHandler AddNewsgroupItemCompleted;

        /// <remarks/>
        public event GenerateFutureCreditCompletedEventHandler GenerateFutureCreditCompleted;

        /// <remarks/>
        public event AutoSubmitBlogCompletedEventHandler AutoSubmitBlogCompleted;

        /// <remarks/>
        public event AddNewsgroupCreditCompletedEventHandler AddNewsgroupCreditCompleted;

        /// <remarks/>
        public event AddCommunityCreditCompletedEventHandler AddCommunityCreditCompleted;

        /// <remarks/>
        public event GetTopEarnersCompletedEventHandler GetTopEarnersCompleted;

        /// <remarks/>
        public event SpreadTheWordCompletedEventHandler SpreadTheWordCompleted;

        /// <remarks/>
        public event GetDemographicsCompletedEventHandler GetDemographicsCompleted;

        /// <remarks/>
        public event GetTopEarnersByDateRangeCompletedEventHandler GetTopEarnersByDateRangeCompleted;

        /// <remarks/>
        public event PointCategoriesAllCompletedEventHandler PointCategoriesAllCompleted;

        /// <remarks/>
        public event GetEarnersByDateRangeAndEmailCompletedEventHandler GetEarnersByDateRangeAndEmailCompleted;

        /// <remarks/>
        public event SendConfirmationEmailCompletedEventHandler SendConfirmationEmailCompleted;

        /// <remarks/>
        public event SendWelcomeEmailCompletedEventHandler SendWelcomeEmailCompleted;

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/AddNewsgroupItem",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string AddNewsgroupItem(string MessageId, string ReferenceId, string NewsgroupID, string User,
                                       string Subject, string Message, string NewsgroupDate, string AffiliateCode,
                                       string AffiliateKey)
        {
            object[] results = Invoke("AddNewsgroupItem", new object[]
            {
                MessageId,
                ReferenceId,
                NewsgroupID,
                User,
                Subject,
                Message,
                NewsgroupDate,
                AffiliateCode,
                AffiliateKey
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AddNewsgroupItemAsync(string MessageId, string ReferenceId, string NewsgroupID, string User,
                                          string Subject, string Message, string NewsgroupDate, string AffiliateCode,
                                          string AffiliateKey)
        {
            AddNewsgroupItemAsync(MessageId, ReferenceId, NewsgroupID, User, Subject, Message, NewsgroupDate,
                                  AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void AddNewsgroupItemAsync(string MessageId, string ReferenceId, string NewsgroupID, string User,
                                          string Subject, string Message, string NewsgroupDate, string AffiliateCode,
                                          string AffiliateKey, object userState)
        {
            if((AddNewsgroupItemOperationCompleted == null))
            {
                AddNewsgroupItemOperationCompleted = new SendOrPostCallback(OnAddNewsgroupItemOperationCompleted);
            }
            InvokeAsync("AddNewsgroupItem", new object[]
            {
                MessageId,
                ReferenceId,
                NewsgroupID,
                User,
                Subject,
                Message,
                NewsgroupDate,
                AffiliateCode,
                AffiliateKey
            }, AddNewsgroupItemOperationCompleted, userState);
        }

        private void OnAddNewsgroupItemOperationCompleted(object arg)
        {
            if((AddNewsgroupItemCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                AddNewsgroupItemCompleted(this,
                                          new AddNewsgroupItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
                                                                                 invokeArgs.Cancelled,
                                                                                 invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/GenerateFutureCredit",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string GenerateFutureCredit(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                           string TaskDescription, string ReferenceURL, string PointCategory,
                                           string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("GenerateFutureCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                AffiliateCode,
                AffiliateKey
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GenerateFutureCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                              string TaskDescription, string ReferenceURL, string PointCategory,
                                              string AffiliateCode, string AffiliateKey)
        {
            GenerateFutureCreditAsync(EarnerEmail, EarnerFirstName, EarnerLastName, TaskDescription, ReferenceURL,
                                      PointCategory, AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void GenerateFutureCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                              string TaskDescription, string ReferenceURL, string PointCategory,
                                              string AffiliateCode, string AffiliateKey, object userState)
        {
            if((GenerateFutureCreditOperationCompleted == null))
            {
                GenerateFutureCreditOperationCompleted = new SendOrPostCallback(OnGenerateFutureCreditOperationCompleted);
            }
            InvokeAsync("GenerateFutureCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                AffiliateCode,
                AffiliateKey
            }, GenerateFutureCreditOperationCompleted, userState);
        }

        private void OnGenerateFutureCreditOperationCompleted(object arg)
        {
            if((GenerateFutureCreditCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GenerateFutureCreditCompleted(this,
                                              new GenerateFutureCreditCompletedEventArgs(invokeArgs.Results,
                                                                                         invokeArgs.Error,
                                                                                         invokeArgs.Cancelled,
                                                                                         invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/AutoSubmitBlog",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string AutoSubmitBlog(string RSSFeedURL, string AffiliateCode, string AffiliateKey, string BlogURL,
                                     string BlogTitle, DateTime BlogDate)
        {
            object[] results = Invoke("AutoSubmitBlog", new object[]
            {
                RSSFeedURL,
                AffiliateCode,
                AffiliateKey,
                BlogURL,
                BlogTitle,
                BlogDate
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AutoSubmitBlogAsync(string RSSFeedURL, string AffiliateCode, string AffiliateKey, string BlogURL,
                                        string BlogTitle, DateTime BlogDate)
        {
            AutoSubmitBlogAsync(RSSFeedURL, AffiliateCode, AffiliateKey, BlogURL, BlogTitle, BlogDate, null);
        }

        /// <remarks/>
        public void AutoSubmitBlogAsync(string RSSFeedURL, string AffiliateCode, string AffiliateKey, string BlogURL,
                                        string BlogTitle, DateTime BlogDate, object userState)
        {
            if((AutoSubmitBlogOperationCompleted == null))
            {
                AutoSubmitBlogOperationCompleted = new SendOrPostCallback(OnAutoSubmitBlogOperationCompleted);
            }
            InvokeAsync("AutoSubmitBlog", new object[]
            {
                RSSFeedURL,
                AffiliateCode,
                AffiliateKey,
                BlogURL,
                BlogTitle,
                BlogDate
            }, AutoSubmitBlogOperationCompleted, userState);
        }

        private void OnAutoSubmitBlogOperationCompleted(object arg)
        {
            if((AutoSubmitBlogCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                AutoSubmitBlogCompleted(this,
                                        new AutoSubmitBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
                                                                             invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/AddNewsgroupCredit",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string AddNewsgroupCredit(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                         string TaskDescription, string ReferenceURL, string PointCategory,
                                         DateTime EarnedDate, string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("AddNewsgroupCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                EarnedDate,
                AffiliateCode,
                AffiliateKey
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AddNewsgroupCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                            string TaskDescription, string ReferenceURL, string PointCategory,
                                            DateTime EarnedDate, string AffiliateCode, string AffiliateKey)
        {
            AddNewsgroupCreditAsync(EarnerEmail, EarnerFirstName, EarnerLastName, TaskDescription, ReferenceURL,
                                    PointCategory, EarnedDate, AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void AddNewsgroupCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                            string TaskDescription, string ReferenceURL, string PointCategory,
                                            DateTime EarnedDate, string AffiliateCode, string AffiliateKey,
                                            object userState)
        {
            if((AddNewsgroupCreditOperationCompleted == null))
            {
                AddNewsgroupCreditOperationCompleted = new SendOrPostCallback(OnAddNewsgroupCreditOperationCompleted);
            }
            InvokeAsync("AddNewsgroupCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                EarnedDate,
                AffiliateCode,
                AffiliateKey
            }, AddNewsgroupCreditOperationCompleted, userState);
        }

        private void OnAddNewsgroupCreditOperationCompleted(object arg)
        {
            if((AddNewsgroupCreditCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                AddNewsgroupCreditCompleted(this,
                                            new AddNewsgroupCreditCompletedEventArgs(invokeArgs.Results,
                                                                                     invokeArgs.Error,
                                                                                     invokeArgs.Cancelled,
                                                                                     invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/AddCommunityCredit",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string AddCommunityCredit(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                         string TaskDescription, string ReferenceURL, string PointCategory,
                                         string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("AddCommunityCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                AffiliateCode,
                AffiliateKey
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AddCommunityCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                            string TaskDescription, string ReferenceURL, string PointCategory,
                                            string AffiliateCode, string AffiliateKey)
        {
            AddCommunityCreditAsync(EarnerEmail, EarnerFirstName, EarnerLastName, TaskDescription, ReferenceURL,
                                    PointCategory, AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void AddCommunityCreditAsync(string EarnerEmail, string EarnerFirstName, string EarnerLastName,
                                            string TaskDescription, string ReferenceURL, string PointCategory,
                                            string AffiliateCode, string AffiliateKey, object userState)
        {
            if((AddCommunityCreditOperationCompleted == null))
            {
                AddCommunityCreditOperationCompleted = new SendOrPostCallback(OnAddCommunityCreditOperationCompleted);
            }
            InvokeAsync("AddCommunityCredit", new object[]
            {
                EarnerEmail,
                EarnerFirstName,
                EarnerLastName,
                TaskDescription,
                ReferenceURL,
                PointCategory,
                AffiliateCode,
                AffiliateKey
            }, AddCommunityCreditOperationCompleted, userState);
        }

        private void OnAddCommunityCreditOperationCompleted(object arg)
        {
            if((AddCommunityCreditCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                AddCommunityCreditCompleted(this,
                                            new AddCommunityCreditCompletedEventArgs(invokeArgs.Results,
                                                                                     invokeArgs.Error,
                                                                                     invokeArgs.Cancelled,
                                                                                     invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/GetTopEarners",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public DataSet GetTopEarners(string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("GetTopEarners", new object[]
            {
                AffiliateCode,
                AffiliateKey
            });
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetTopEarnersAsync(string AffiliateCode, string AffiliateKey)
        {
            GetTopEarnersAsync(AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void GetTopEarnersAsync(string AffiliateCode, string AffiliateKey, object userState)
        {
            if((GetTopEarnersOperationCompleted == null))
            {
                GetTopEarnersOperationCompleted = new SendOrPostCallback(OnGetTopEarnersOperationCompleted);
            }
            InvokeAsync("GetTopEarners", new object[]
            {
                AffiliateCode,
                AffiliateKey
            }, GetTopEarnersOperationCompleted, userState);
        }

        private void OnGetTopEarnersOperationCompleted(object arg)
        {
            if((GetTopEarnersCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GetTopEarnersCompleted(this,
                                       new GetTopEarnersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
                                                                           invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/SpreadTheWord",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public string SpreadTheWord(string AffiliateCode, string AffiliateKey, string FromName, string ToEmailAddress,
                                    string FirstName, string LastName)
        {
            object[] results = Invoke("SpreadTheWord", new object[]
            {
                AffiliateCode,
                AffiliateKey,
                FromName,
                ToEmailAddress,
                FirstName,
                LastName
            });
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SpreadTheWordAsync(string AffiliateCode, string AffiliateKey, string FromName, string ToEmailAddress,
                                       string FirstName, string LastName)
        {
            SpreadTheWordAsync(AffiliateCode, AffiliateKey, FromName, ToEmailAddress, FirstName, LastName, null);
        }

        /// <remarks/>
        public void SpreadTheWordAsync(string AffiliateCode, string AffiliateKey, string FromName, string ToEmailAddress,
                                       string FirstName, string LastName, object userState)
        {
            if((SpreadTheWordOperationCompleted == null))
            {
                SpreadTheWordOperationCompleted = new SendOrPostCallback(OnSpreadTheWordOperationCompleted);
            }
            InvokeAsync("SpreadTheWord", new object[]
            {
                AffiliateCode,
                AffiliateKey,
                FromName,
                ToEmailAddress,
                FirstName,
                LastName
            }, SpreadTheWordOperationCompleted, userState);
        }

        private void OnSpreadTheWordOperationCompleted(object arg)
        {
            if((SpreadTheWordCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                SpreadTheWordCompleted(this,
                                       new SpreadTheWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
                                                                           invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/GetDemographics",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public DataSet GetDemographics(string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("GetDemographics", new object[]
            {
                AffiliateCode,
                AffiliateKey
            });
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetDemographicsAsync(string AffiliateCode, string AffiliateKey)
        {
            GetDemographicsAsync(AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void GetDemographicsAsync(string AffiliateCode, string AffiliateKey, object userState)
        {
            if((GetDemographicsOperationCompleted == null))
            {
                GetDemographicsOperationCompleted = new SendOrPostCallback(OnGetDemographicsOperationCompleted);
            }
            InvokeAsync("GetDemographics", new object[]
            {
                AffiliateCode,
                AffiliateKey
            }, GetDemographicsOperationCompleted, userState);
        }

        private void OnGetDemographicsOperationCompleted(object arg)
        {
            if((GetDemographicsCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GetDemographicsCompleted(this,
                                         new GetDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error,
                                                                               invokeArgs.Cancelled,
                                                                               invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/GetTopEarnersByDateRange",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public DataSet GetTopEarnersByDateRange(string StartDate, string EndDate, string AffiliateCode,
                                                string AffiliateKey)
        {
            object[] results = Invoke("GetTopEarnersByDateRange", new object[]
            {
                StartDate,
                EndDate,
                AffiliateCode,
                AffiliateKey
            });
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetTopEarnersByDateRangeAsync(string StartDate, string EndDate, string AffiliateCode,
                                                  string AffiliateKey)
        {
            GetTopEarnersByDateRangeAsync(StartDate, EndDate, AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void GetTopEarnersByDateRangeAsync(string StartDate, string EndDate, string AffiliateCode,
                                                  string AffiliateKey, object userState)
        {
            if((GetTopEarnersByDateRangeOperationCompleted == null))
            {
                GetTopEarnersByDateRangeOperationCompleted =
                    new SendOrPostCallback(OnGetTopEarnersByDateRangeOperationCompleted);
            }
            InvokeAsync("GetTopEarnersByDateRange", new object[]
            {
                StartDate,
                EndDate,
                AffiliateCode,
                AffiliateKey
            }, GetTopEarnersByDateRangeOperationCompleted, userState);
        }

        private void OnGetTopEarnersByDateRangeOperationCompleted(object arg)
        {
            if((GetTopEarnersByDateRangeCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GetTopEarnersByDateRangeCompleted(this,
                                                  new GetTopEarnersByDateRangeCompletedEventArgs(invokeArgs.Results,
                                                                                                 invokeArgs.Error,
                                                                                                 invokeArgs.Cancelled,
                                                                                                 invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/PointCategoriesAll",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public DataSet PointCategoriesAll(string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("PointCategoriesAll", new object[]
            {
                AffiliateCode,
                AffiliateKey
            });
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        public void PointCategoriesAllAsync(string AffiliateCode, string AffiliateKey)
        {
            PointCategoriesAllAsync(AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void PointCategoriesAllAsync(string AffiliateCode, string AffiliateKey, object userState)
        {
            if((PointCategoriesAllOperationCompleted == null))
            {
                PointCategoriesAllOperationCompleted = new SendOrPostCallback(OnPointCategoriesAllOperationCompleted);
            }
            InvokeAsync("PointCategoriesAll", new object[]
            {
                AffiliateCode,
                AffiliateKey
            }, PointCategoriesAllOperationCompleted, userState);
        }

        private void OnPointCategoriesAllOperationCompleted(object arg)
        {
            if((PointCategoriesAllCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                PointCategoriesAllCompleted(this,
                                            new PointCategoriesAllCompletedEventArgs(invokeArgs.Results,
                                                                                     invokeArgs.Error,
                                                                                     invokeArgs.Cancelled,
                                                                                     invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/GetEarnersByDateRangeAndEmail",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public DataSet GetEarnersByDateRangeAndEmail(string Email, string StartDate, string EndDate,
                                                     string AffiliateCode, string AffiliateKey)
        {
            object[] results = Invoke("GetEarnersByDateRangeAndEmail", new object[]
            {
                Email,
                StartDate,
                EndDate,
                AffiliateCode,
                AffiliateKey
            });
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetEarnersByDateRangeAndEmailAsync(string Email, string StartDate, string EndDate,
                                                       string AffiliateCode, string AffiliateKey)
        {
            GetEarnersByDateRangeAndEmailAsync(Email, StartDate, EndDate, AffiliateCode, AffiliateKey, null);
        }

        /// <remarks/>
        public void GetEarnersByDateRangeAndEmailAsync(string Email, string StartDate, string EndDate,
                                                       string AffiliateCode, string AffiliateKey, object userState)
        {
            if((GetEarnersByDateRangeAndEmailOperationCompleted == null))
            {
                GetEarnersByDateRangeAndEmailOperationCompleted =
                    new SendOrPostCallback(OnGetEarnersByDateRangeAndEmailOperationCompleted);
            }
            InvokeAsync("GetEarnersByDateRangeAndEmail", new object[]
            {
                Email,
                StartDate,
                EndDate,
                AffiliateCode,
                AffiliateKey
            }, GetEarnersByDateRangeAndEmailOperationCompleted, userState);
        }

        private void OnGetEarnersByDateRangeAndEmailOperationCompleted(object arg)
        {
            if((GetEarnersByDateRangeAndEmailCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                GetEarnersByDateRangeAndEmailCompleted(this,
                                                       new GetEarnersByDateRangeAndEmailCompletedEventArgs(
                                                           invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled,
                                                           invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/SendConfirmationEmail",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public void SendConfirmationEmail(string EmailAddress, string FirstName)
        {
            Invoke("SendConfirmationEmail", new object[]
            {
                EmailAddress,
                FirstName
            });
        }

        /// <remarks/>
        public void SendConfirmationEmailAsync(string EmailAddress, string FirstName)
        {
            SendConfirmationEmailAsync(EmailAddress, FirstName, null);
        }

        /// <remarks/>
        public void SendConfirmationEmailAsync(string EmailAddress, string FirstName, object userState)
        {
            if((SendConfirmationEmailOperationCompleted == null))
            {
                SendConfirmationEmailOperationCompleted =
                    new SendOrPostCallback(OnSendConfirmationEmailOperationCompleted);
            }
            InvokeAsync("SendConfirmationEmail", new object[]
            {
                EmailAddress,
                FirstName
            }, SendConfirmationEmailOperationCompleted, userState);
        }

        private void OnSendConfirmationEmailOperationCompleted(object arg)
        {
            if((SendConfirmationEmailCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                SendConfirmationEmailCompleted(this,
                                               new AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled,
                                                                           invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [SoapDocumentMethod("http://www.community-credit.com/SendWelcomeEmail",
            RequestNamespace = "http://www.community-credit.com/",
            ResponseNamespace = "http://www.community-credit.com/", Use = SoapBindingUse.Literal,
            ParameterStyle = SoapParameterStyle.Wrapped)]
        public void SendWelcomeEmail(string Source, string strTo, string FirstName, string strPassword,
                                     string strCommunities, string strPasswordType)
        {
            Invoke("SendWelcomeEmail", new object[]
            {
                Source,
                strTo,
                FirstName,
                strPassword,
                strCommunities,
                strPasswordType
            });
        }

        /// <remarks/>
        public void SendWelcomeEmailAsync(string Source, string strTo, string FirstName, string strPassword,
                                          string strCommunities, string strPasswordType)
        {
            SendWelcomeEmailAsync(Source, strTo, FirstName, strPassword, strCommunities, strPasswordType, null);
        }

        /// <remarks/>
        public void SendWelcomeEmailAsync(string Source, string strTo, string FirstName, string strPassword,
                                          string strCommunities, string strPasswordType, object userState)
        {
            if((SendWelcomeEmailOperationCompleted == null))
            {
                SendWelcomeEmailOperationCompleted = new SendOrPostCallback(OnSendWelcomeEmailOperationCompleted);
            }
            InvokeAsync("SendWelcomeEmail", new object[]
            {
                Source,
                strTo,
                FirstName,
                strPassword,
                strCommunities,
                strPasswordType
            }, SendWelcomeEmailOperationCompleted, userState);
        }

        private void OnSendWelcomeEmailOperationCompleted(object arg)
        {
            if((SendWelcomeEmailCompleted != null))
            {
                var invokeArgs = ((InvokeCompletedEventArgs)(arg));
                SendWelcomeEmailCompleted(this,
                                          new AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled,
                                                                      invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if(((url == null)
                || (url == string.Empty)))
            {
                return false;
            }
            var wsUri = new Uri(url);
            if(((wsUri.Port >= 1024)
                && (string.Compare(wsUri.Host, "localHost", StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void AddNewsgroupItemCompletedEventHandler(object sender, AddNewsgroupItemCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class AddNewsgroupItemCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal AddNewsgroupItemCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                    object userState) :
                                                        base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void GenerateFutureCreditCompletedEventHandler(
        object sender, GenerateFutureCreditCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GenerateFutureCreditCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GenerateFutureCreditCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                        object userState) :
                                                            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void AutoSubmitBlogCompletedEventHandler(object sender, AutoSubmitBlogCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class AutoSubmitBlogCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal AutoSubmitBlogCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                  object userState) :
                                                      base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void AddNewsgroupCreditCompletedEventHandler(object sender, AddNewsgroupCreditCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class AddNewsgroupCreditCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal AddNewsgroupCreditCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                      object userState) :
                                                          base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void AddCommunityCreditCompletedEventHandler(object sender, AddCommunityCreditCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class AddCommunityCreditCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal AddCommunityCreditCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                      object userState) :
                                                          base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void GetTopEarnersCompletedEventHandler(object sender, GetTopEarnersCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetTopEarnersCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetTopEarnersCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DataSet Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((DataSet)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void SpreadTheWordCompletedEventHandler(object sender, SpreadTheWordCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SpreadTheWordCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal SpreadTheWordCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void GetDemographicsCompletedEventHandler(object sender, GetDemographicsCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetDemographicsCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetDemographicsCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                   object userState) :
                                                       base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DataSet Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((DataSet)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void GetTopEarnersByDateRangeCompletedEventHandler(
        object sender, GetTopEarnersByDateRangeCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetTopEarnersByDateRangeCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetTopEarnersByDateRangeCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                            object userState) :
                                                                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DataSet Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((DataSet)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void PointCategoriesAllCompletedEventHandler(object sender, PointCategoriesAllCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class PointCategoriesAllCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal PointCategoriesAllCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                      object userState) :
                                                          base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DataSet Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((DataSet)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void GetEarnersByDateRangeAndEmailCompletedEventHandler(
        object sender, GetEarnersByDateRangeAndEmailCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetEarnersByDateRangeAndEmailCompletedEventArgs : AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetEarnersByDateRangeAndEmailCompletedEventArgs(object[] results, Exception exception, bool cancelled,
                                                                 object userState) :
                                                                     base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DataSet Result
        {
            get
            {
                RaiseExceptionIfNecessary();
                return ((DataSet)(results[0]));
            }
        }
    }

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void SendConfirmationEmailCompletedEventHandler(object sender, AsyncCompletedEventArgs e);

    /// <remarks/>
    [GeneratedCode("System.Web.Services", "2.0.50727.1378")]
    public delegate void SendWelcomeEmailCompletedEventHandler(object sender, AsyncCompletedEventArgs e);
}

#pragma warning restore 1591